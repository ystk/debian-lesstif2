'\" t
.\" $Header: /cvsroot/lesstif/lesstif/doc/lessdox/widgets/XmBulletinBoard.3,v 1.7 2009/04/29 12:23:30 paulgevers Exp $
.\"
.\" Copyright (C) 1997-1998 Free Software Foundation, Inc.
.\" 
.\" This file is part of the GNU LessTif Library.
.\" This library is free software; you can redistribute it and/or
.\" modify it under the terms of the GNU Library General Public
.\" License as published by the Free Software Foundation; either
.\" version 2 of the License, or (at your option) any later version.
.\" 
.\" This library is distributed in the hope that it will be useful,
.\" but WITHOUT ANY WARRANTY; without even the implied warranty of
.\" MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
.\" Library General Public License for more details.
.\" 
.\" You should have received a copy of the GNU Library General Public
.\" License along with this library; if not, write to the Free
.\" Software Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
.\" 
.TH XmBulletinBoard 3 "April 1998" "LessTif Project" "LessTif Manuals"
.SH NAME
XmBulletinBoard \- Motif-compatible widget for geometry management
.SH SYNOPSIS
.B #include <Xm/BulletinB.h>
.PP
.B XmBulletinBoard
.PP
.BR XmCreateBulletinBoard (3x)
.SH DESCRIPTION
XmBulletinBoard is a widget that serves two main purposes.
It is the basic widget for geometry management,
of which many other manager widgets are subclassed.
XmBulletinBoard is also designed to be the widget to build
dialogs with.
.PP
Both the layout (geometry) management and the dialog features
are excellent reasons to subclass from XmBulletinBoard.
.PP
Finally, XmBulletinBoard and its subclasses are recognised and
treated especially by XmDialogShell.
In normal circumstances,
managing (with
.BR XtManageChild (3x)
) a XmBulletinBoard
which is a direct child of a XmDialogShell will pop up a dialog window.
.SH X RESOURCES
.TS
tab(;);
l l l l l.
Name;Class;Type;Default;Access
_
XmNshadowType;XmCShadowType;ShadowType;NULL;CSG
XmNshadowThickness;XmCShadowThickness;HorizontalDimension;NULL;CSG
XmNmarginWidth;XmCMarginWidth;HorizontalDimension;NULL;CSG
XmNmarginHeight;XmCMarginHeight;VerticalDimension;NULL;CSG
XmNdefaultButton;XmCWidget;Widget;NULL;CSG
XmNcancelButton;XmCWidget;Widget;NULL;CSG
XmNfocusCallback;XmCCallback;Callback;NULL;CSG
XmNmapCallback;XmCCallback;Callback;NULL;CSG
XmNunmapCallback;XmCCallback;Callback;NULL;CSG
XmNbuttonFontList;XmCButtonFontList;FontList;NULL;CSG
XmNlabelFontList;XmCLabelFontList;FontList;NULL;CSG
XmNtextFontList;XmCTextFontList;FontList;NULL;CSG
XmNtextTranslations;XmCTranslations;TranslationTable;NULL;CSG
XmNallowOverlap;XmCAllowOverlap;Boolean;NULL;CSG
XmNautoUnmanage;XmCAutoUnmanage;Boolean;NULL;CSG
XmNdefaultPosition;XmCDefaultPosition;Boolean;NULL;CSG
XmNresizePolicy;XmCResizePolicy;ResizePolicy;NULL;CSG
XmNnoResize;XmCNoResize;Boolean;NULL;CSG
XmNdialogStyle;XmCDialogStyle;DialogStyle;NULL;CSG
XmNdialogTitle;XmCDialogTitle;XmString;(null);CSG
.TE
.PP
.BR XmNshadowType
.PP
.BR XmNshadowThickness
.PP
.BR XmNmarginWidth
.PP
.BR XmNmarginHeight
.PP
.BR XmNdefaultButton
.PP
.BR XmNcancelButton
is a resource which contains the widget ID for the cancel button which
is automatically created when you call some functions such as
.BR XmCreateMessageBox (3x) .
The cancel button can be removed by calling
.BR XtDestroyWidget (3x)
or it can be hidden by calling
.BR XtUnmanageChild (3x) .
.PP
.BR XmNfocusCallback
.PP
.BR XmNmapCallback
is a callback list which is called prior to mapping the dialog.
.PP
.BR XmNunmapCallback
.PP
.BR XmNbuttonFontList
specifies the fontList used for button children.
.PP
.BR XmNlabelFontList
specifies the fontList used for label children.
.PP
.BR XmNtextFontList
specifies the fontList for
.BR XmText (3x)
or
.BR XmTextField (3x)
widgets which are children of the bulletinboard.
.PP
.BR XmNtextTranslations
.PP
.BR XmNallowOverlap
.PP
.BR XmNautoUnmanage
specifies that the dialog will automatically pop down when the user
activates a button in the dialog other than the Apply or Help buttons.
If this resource is not set,
the dialog must be popped down by an action in the application
(most likely by calling
.BR XtUnmanageChild (3x)
from inside some callback function).
.PP
.BR XmNdefaultPosition
will position the dialog centered above the window that calls it.
If this resources is not set,
the application should position the dialog e.g. by setting XmNx and XmNy
from a function called from the XmNokCallback.
.PP
.BR XmNresizePolicy
.PP
.BR XmNnoResize
.PP
.BR XmNdialogStyle
This only works if the bulletinboard is a child of a
.BR XmDialogShell (3x)
widget.
.PP
.BR XmNdialogTitle
specifies the dialog's title,
which is passed to the window manager.
This only works if the bulletinboard is a child of a
.BR XmDialogShell (3x)
widget.
.PP
.SH CLASS HIERARCHY
.BR Object (3)
.BR Rect (3)
.BR UnNamedObj (3)
.BR Core (3)
.BR Composite (3)
.BR Constraint (3)
.BR XmManager (3)
.BR XmBulletinBoard (3)
.SH CALLBACKS
There is no widget specific structure passed by the callback functions.
The data passed is a pointer to a structure of type XmAnyCallbackStruct :
.SM
 typedef struct {
    int reason;
    XEvent *event;
 } XmAnyCallbackStruct;
.SM
.SH CONVENIENCE FUNCTIONS
.BR XmCreateBulletinBoardDialog (3x)
.SH SEE ALSO
.BR XmDialogShell (3x)
